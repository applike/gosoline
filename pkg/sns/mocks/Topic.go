// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Topic is an autogenerated mock type for the Topic type
type Topic struct {
	mock.Mock
}

func (_m *Topic) Publish(ctx context.Context, msg *string, attributes ...map[string]interface{}) error {
	var _ca []interface{}
	_ca = append(_ca, ctx, msg)

	for _, attr := range attributes {
		_ca = append(_ca, attr)
	}

	ret := _m.Called(_ca...)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *string, ...map[string]interface{}) error); ok {
		r0 = rf(ctx, msg, attributes...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SubscribeSqs provides a mock function with given fields: queueArn, attributes
func (_m *Topic) SubscribeSqs(queueArn string, attributes map[string]interface{}) error {
	ret := _m.Called(queueArn, attributes)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, map[string]interface{}) error); ok {
		r0 = rf(queueArn, attributes)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
