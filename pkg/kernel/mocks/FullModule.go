// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import cfg "github.com/applike/gosoline/pkg/cfg"
import context "context"

import mock "github.com/stretchr/testify/mock"
import mon "github.com/applike/gosoline/pkg/mon"

// FullModule is an autogenerated mock type for the FullModule type
type FullModule struct {
	mock.Mock
}

// Boot provides a mock function with given fields: config, logger
func (_m *FullModule) Boot(config cfg.Config, logger mon.Logger) error {
	ret := _m.Called(config, logger)

	var r0 error
	if rf, ok := ret.Get(0).(func(cfg.Config, mon.Logger) error); ok {
		r0 = rf(config, logger)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetStage provides a mock function with given fields:
func (_m *FullModule) GetStage() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// GetType provides a mock function with given fields:
func (_m *FullModule) GetType() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Run provides a mock function with given fields: ctx
func (_m *FullModule) Run(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
